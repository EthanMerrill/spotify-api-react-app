{"version":3,"sources":["components/D3Chart.js","components/SpotifySelectors.js","pages/Home.js","components/Redirect.js","App.js","reportWebVitals.js","index.js"],"names":["D3Chart","props","data","trackAttribute","useState","sortedData","setSortedData","bars","setBars","orderMethod","setOrderMethod","playlistStats","setPlaylistStats","chartOffset","chartHeight","length","useEffect","Math","max","apply","map","o","min","reduce","p","c","sort","a","b","tempDesc","everyOther","filter","element","index","OddsOther","dataFirstHalf","dataSecondHalf","concat","yScale","d3","domain","range","padding","xScale","chartData","d","trackName","name","x","y","indexOf","width","height","className","ToggleButtonGroup","color","value","exclusive","onChange","event","newAlignment","ToggleButton","toFixed","avg","id","style","fill","x1","x2","y1","y2","stroke","strokeWidth","barHeight","rx","SpotifySelectors","access_token","setSongsDetails","setTrackAttribute","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","songlist","setSonglist","headers","axios","get","then","response","items","elm","label","error","console","log","promises","track","resp","popularity","Promise","all","results","Autocomplete","disablePortal","options","sx","isOptionEqualToValue","option","renderInput","params","TextField","Home","hash","window","location","substring","songsDetails","React","Redirect","clientId","process","baseURI","href","redirect_uri","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","mode","primary","main","light","dark","backgroundColor","contrastText","secondary","contrastThreshold","tonalOffset","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5700edad.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\n// https://www.youtube.com/watch?v=zXBdNDnqV2Q\r\n\r\nconst D3Chart = (props) => {\r\n    // destructure props\r\n    const { data } = props // don't want to see props other places. \r\n    const { trackAttribute } = props\r\n    // State Variables\r\n    const [sortedData, setSortedData] = useState(null)\r\n    const [bars, setBars] = useState(null)\r\n    const [orderMethod, setOrderMethod] = useState('None')\r\n    const [playlistStats, setPlaylistStats] = useState({\r\n        'max': 0,\r\n        'min': 0,\r\n        'avg': 0\r\n        })\r\n    //constant vars\r\n    const barHeight = 30\r\n    const chartWidth = 800\r\n    const chartOffset = 40\r\n    let chartHeight = data ? (data?.length * (barHeight + 5)) + (chartOffset) : 0 \r\n\r\n    //use effects\r\n\r\n        //update stats\r\n    useEffect(() => {\r\n\r\n        if (data !== null){\r\n            setPlaylistStats({\r\n                'max': (Math.max.apply(Math, data?.map(function (o) { return o[trackAttribute] }))),\r\n                'min': (Math.min.apply(Math, data?.map(function (o) { return o[trackAttribute] }))),\r\n                'avg': data?.reduce((p, c) => p + c[trackAttribute], 0) / data?.length\r\n            })\r\n        }\r\n    }, [data, trackAttribute])\r\n    \r\n        // a method to sort the playlist\r\n    useEffect(() => {\r\n        if (data !== null){\r\n            switch (orderMethod) {\r\n                case 'Ascending':\r\n                    setSortedData([...data].sort((a, b) => {\r\n                        return b[trackAttribute] - a[trackAttribute]\r\n                    }))\r\n                    break\r\n                case 'Descending':\r\n                   setSortedData([...data].sort((a, b) => {\r\n                        return a[trackAttribute] - b[trackAttribute]\r\n                    }))\r\n                    break\r\n                case 'Peak':\r\n                    let tempDesc = [...data].sort((a, b) => {\r\n                        return b[trackAttribute] - a[trackAttribute]\r\n                    })\r\n\r\n                    let everyOther = tempDesc.filter((element, index) => {\r\n                        return index % 2 === 0;\r\n                    })\r\n                    let OddsOther = tempDesc.filter((element, index) => {\r\n                        return index % 2 !== 0;\r\n                    })\r\n\r\n                    let dataFirstHalf = everyOther.sort((a, b) => {\r\n                        return a[trackAttribute] - b[trackAttribute]\r\n                    })\r\n                    let dataSecondHalf = OddsOther.sort((a, b) => {\r\n                        return b[trackAttribute] - a[trackAttribute]\r\n                    })\r\n                    setSortedData(dataFirstHalf.concat(dataSecondHalf))\r\n                    break\r\n                case 'None':\r\n                    setSortedData(data)\r\n                    break\r\n                default:\r\n                    setSortedData(data)\r\n                    break\r\n\r\n            }\r\n        } else {\r\n            setBars(null)\r\n        }\r\n    }, [orderMethod, trackAttribute, data])\r\n\r\n    useEffect(() => {\r\n        if (typeof (sortedData) !== 'undefined') {\r\n            let yScale = d3.scaleBand().domain(d3.range(data?.length)).range([0, chartHeight-chartOffset]).padding(.05)\r\n            let xScale = d3.scaleLinear().domain([0, playlistStats.max]).range([0, 100])\r\n\r\n            let chartData = sortedData?.map(d => {\r\n\r\n                return {\r\n                    trackName: d?.name,\r\n                    x: 50,\r\n                    y: yScale(sortedData?.indexOf(d)),\r\n                    width: xScale(d[trackAttribute]),\r\n                    height: barHeight,\r\n                }\r\n            })\r\n            setBars(chartData)\r\n        }\r\n    }, [data, chartHeight, trackAttribute, playlistStats, orderMethod, sortedData])\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        setOrderMethod(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <> {/*this iS A FRAGMENT*/}\r\n        <div className = 'sort-controls'>\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={orderMethod}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"None\">None</ToggleButton>\r\n                    <ToggleButton value=\"Ascending\">Ascending</ToggleButton>\r\n                    <ToggleButton value=\"Descending\">Descending</ToggleButton>\r\n                    <ToggleButton value=\"Peak\">Peak</ToggleButton>\r\n\r\n                </ToggleButtonGroup>\r\n        </div>\r\n\r\n        <div className = 'playlist-stats card'>\r\n            {data &&\r\n            <>\r\n                <h3>Min {trackAttribute}: {playlistStats.min.toFixed(2)}</h3>\r\n                <h3>Max {trackAttribute}: {playlistStats.max.toFixed(2)}</h3>\r\n                <h3>Average {trackAttribute}: {playlistStats.avg.toFixed(2)}</h3>\r\n            </>\r\n            }\r\n        </div>\r\n\r\n        <div id = 'chart'>\r\n           \r\n            {/* Add a TERNARY ??, React Fragments sort of like an invisible bundler div */}\r\n            <svg id='songChart' height={chartHeight} width={chartWidth}>\r\n                <text x={50} y={15} style={{fill: '#FFFFFF'}}>{trackAttribute}</text>\r\n                <text x={ bars ? Math.max.apply(Math, bars.map(function (o) { return o.width + 50 }))+8 : 20} y={15} style={{ fill: '#FFFFFF' }}>Songs</text>\r\n                <line x1={0} x2={chartWidth} y1={chartOffset-15} y2={chartOffset-15} stroke='white' strokeWidth='.1' />\r\n                \r\n\r\n                {data &&\r\n                    bars?.map(bars => {\r\n                        return <g key={bars.y}>\r\n                            <text x={bars.x + 110} y={bars.y + (barHeight / 2)+chartOffset} style={{ fill: '#FFFFFF' }}>{bars?.trackName} </text>\r\n                            <rect x={bars.x} y={bars.y + chartOffset} width={bars.width} height={bars.height} style={{ fill:'#1DB954', rx: '4px'}}></rect>\r\n                            \r\n                        </g>\r\n                    })\r\n                \r\n                }\r\n                {data &&\r\n                    <g>\r\n\r\n                    <line x1={Math.max.apply(Math, bars.map(function (o) { return o.width + 50 }))} y1={chartOffset} x2={Math.max.apply(Math, bars.map(function (o) { return o.width+50 }))} y2={chartHeight} stroke='white' strokeWidth=\".3\" />\r\n                    <line x1={50} y1={chartOffset} x2={50} y2={chartHeight} stroke='white' strokeWidth=\".3\"/>\r\n\r\n                    {/* Max Lines */}\r\n                    {/* <line x1={Math.max.apply(Math, bars.map(function (o) { return o.width + 50 }))} x2={300} y1={chartOffset} y2={30} stroke='white' strokeWidth='.3'/> */}\r\n                    {/* Avg Line */}\r\n                    {/* <line x1={} x2={} y1={} y2={} stroke='white' strokeWidth='.3'/> */}\r\n\r\n                    {/* Min Ln */}\r\n                        {/* <line x1={Math.min.apply(Math, bars.map(function (o) { return o.width + 50 }))} x2={200} y1={chartOffset} y2={30} stroke='white' strokeWidth='.3'/> */}\r\n                    {/* <line x1={} x2={} y1={} y2={} stroke='white' strokeWidth='.3'/> */}\r\n                    </g>\r\n                }\r\n                \r\n            </svg>\r\n           \r\n        </div>\r\n         </>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default D3Chart","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\n\r\nconst SpotifySelectors = (props) => {\r\n    //destructure\r\n    const {access_token} = props\r\n\r\n    const {setSongsDetails} = props\r\n\r\n    const {setTrackAttribute} = props\r\n    const {trackAttribute} = props\r\n\r\n    //state vars\r\n    const [playlists, setPlaylists] = useState('No Playlists Found')\r\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null)\r\n    const [songlist, setSonglist] = useState(null)\r\n    //const vars\r\n\r\n    //use effects\r\n        //Get Spotify Playlists\r\n    useEffect(() => {\r\n        \r\n        const headers = {\r\n            'Authorization': 'Bearer ' + access_token\r\n        }\r\n        axios.get(`https://api.spotify.com/v1/me/playlists?limit=50`, { headers: headers })\r\n            .then((response) => {\r\n                setPlaylists(response?.data?.items?.map(elm => {\r\n                    return { label: elm.name, data: elm }\r\n                }))\r\n            }, (error) => {\r\n                console.log(error);\r\n            })\r\n    }, [access_token]);\r\n\r\n        // get songs in the playlists\r\n    useEffect(() => {\r\n        // Cleaner way of doing this??\r\n        if(typeof(selectedPlaylist) !== 'undefined'){   \r\n            const headers = {\r\n                'Authorization': 'Bearer ' + access_token\r\n            }\r\n            axios.get(`https://api.spotify.com/v1/playlists/${selectedPlaylist?.id}/tracks`, { headers: headers })\r\n                .then((response) => {\r\n                    setSonglist(response)\r\n                    songlist?.items?.map(elm => {\r\n                        return elm\r\n                    })\r\n                }, (error) => {\r\n                    console.log('this error', selectedPlaylist, error);\r\n                })\r\n        } else {\r\n            console.log('no playlist selected')\r\n            setSongsDetails(null)\r\n            setSonglist(null)\r\n        }\r\n    }, [selectedPlaylist, access_token, songlist?.items, setSongsDetails])\r\n\r\n        // get the details of each song in the songlist\r\n    useEffect(() => {\r\n        if (songlist && typeof (selectedPlaylist) !== 'undefined'){\r\n            let promises = songlist?.data?.items?.map(track => {\r\n                const headers = {\r\n                    'Authorization': 'Bearer ' + access_token\r\n                }\r\n                return axios.get(`https://api.spotify.com/v1/audio-features/${track.track.id}`, { headers: headers })\r\n                    .then((response) => {\r\n                        // console.log(track.track.name, track.track.popularity, track.track.id, response)\r\n                        let resp = (response?.data)\r\n                        resp['name'] = (track.track.name)\r\n                        resp['popularity'] = (track.track.popularity)\r\n\r\n                        return(resp)\r\n                    }, (error) => {\r\n                        console.log(error)\r\n                        return(error)\r\n                    })\r\n                    \r\n            })\r\n            Promise.all(promises).then(results => {\r\n                setSongsDetails(results)\r\n            })\r\n        } else {\r\n            setSongsDetails(null)\r\n        }\r\n    }, [selectedPlaylist, access_token, songlist, setSongsDetails])\r\n\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        setTrackAttribute(newAlignment);\r\n    };\r\n\r\n\r\n    //jsx return\r\n    return (<>\r\n        <div className='inputs-flex'>\r\n        <ToggleButtonGroup\r\n            color=\"primary\"\r\n            value={trackAttribute}\r\n            exclusive\r\n            onChange={handleChange}\r\n        >\r\n            <ToggleButton color='secondary' value=\"danceability\">danceability</ToggleButton>\r\n            <ToggleButton value=\"energy\">energy</ToggleButton>\r\n            <ToggleButton value=\"key\">key</ToggleButton>\r\n            {/* <ToggleButton value=\"loudness\">loudness</ToggleButton> */}\r\n            <ToggleButton value=\"speechiness\">speechiness</ToggleButton>\r\n            <ToggleButton value=\"tempo\">tempo</ToggleButton>\r\n        </ToggleButtonGroup>\r\n\r\n        <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box\"\r\n            options={playlists}\r\n            sx={{ width: 300 }}\r\n            onChange={(event, value) => setSelectedPlaylist(value?.data)}\r\n            isOptionEqualToValue={(option, value) => option.id === value.id}\r\n            renderInput={(params) => <TextField {...params} label=\"Playlist\" />}\r\n        />\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SpotifySelectors\r\n","import React, {useState } from 'react';\r\nimport D3Chart from '../components/D3Chart'\r\nimport SpotifySelectors from '../components/SpotifySelectors';\r\n\r\nconst Home = (props) => {\r\n    const hash = window.location.hash\r\n    const access_token = hash.substring(14, hash.indexOf('&token_type'))\r\n\r\n\r\n    const [songsDetails, setSongsDetails] = useState(null)\r\n    const [trackAttribute, setTrackAttribute] = React.useState('tempo');\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <SpotifySelectors className = \"card\" access_token={access_token} setSongsDetails = {setSongsDetails} trackAttribute = {trackAttribute} setTrackAttribute = {setTrackAttribute}/>\r\n         \r\n            <hr/>\r\n            <div className='song-chart-frame'>\r\n                \r\n                <D3Chart data={songsDetails} trackAttribute = {trackAttribute}></D3Chart>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n    ) \r\n\r\n}\r\nexport default Home","\r\nimport React, { useEffect } from 'react';\r\n\r\nconst Redirect = (props) => {\r\n    const clientId = process.env.REACT_APP_CLIENT_KEY;\r\n    const baseURI = window.location.href\r\n    const redirect_uri = `${baseURI}index`;\r\n    useEffect(() => {\r\n        \r\n        window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${redirect_uri}&response_type=token&state=123`;\r\n    }, [clientId, redirect_uri]);\r\n\r\n    return (\r\n        <div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Redirect;","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Redirect from './components/Redirect'\nimport {BrowserRouter as Router,\n  Switch,\n  Route} from 'react-router-dom'\n// https://levelup.gitconnected.com/how-to-build-a-spotify-player-with-react-in-15-minutes-7e01991bc4b6\n\nconst App = (props) => {\n\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Jam Sort \n      </header>\n    <Router>\n      <Switch>\n          <Route path= \"/spotify-api-react-app\" exact component={Redirect}/>\n          <Route path=\"/spotify-api-react-app/index\" exact component = {Home}/>\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n//pull in use styles from material u core. Pass in the degailt theme object\n//\nlet theme = createTheme({\n\n  palette: {\n    mode: 'dark',\n    primary: {\n      // light: will be calculated from palette.primary.main,\n     \n      main: '#FFFFFF',\n      light: '#FFFFF',\n      dark: '#FF0000',\n      backgroundColor: '#FFFFFF',\n      contrastText: '#FFFFFF'\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: '#b3b3b3',\n      main: '#b3b3b3',\n      dark: '#181818',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#FFFFFF',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme = {theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}