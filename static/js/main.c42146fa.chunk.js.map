{"version":3,"sources":["components/D3Chart.js","components/SpotifySelectors.js","components/PlaylistInterface.js","components/SpotifyData.js","pages/JamSort.js","pages/GenreCheck.js","components/Redirect.js","App.js","reportWebVitals.js","index.js"],"names":["D3Chart","props","data","trackAttribute","setSongIdOrder","_useState","useState","_useState2","_slicedToArray","sortedData","setSortedData","_useState3","_useState4","bars","setBars","_useState5","_useState6","orderMethod","setOrderMethod","_useState7","_useState8","playlistStats","setPlaylistStats","chartOffset","chartHeight","length","useEffect","Math","max","apply","map","o","min","reduce","p","c","console","log","_toConsumableArray","sort","a","b","tempDesc","everyOther","filter","element","index","OddsOther","dataFirstHalf","dataSecondHalf","concat","yScale","d3","domain","range","padding","xScale","d","id","chartData","_d$track","trackName","track","name","x","y","indexOf","width","height","_jsxs","_Fragment","children","className","_jsx","ToggleButtonGroup","color","value","exclusive","onChange","event","newAlignment","ToggleButton","toFixed","avg","style","fill","x1","x2","y1","y2","stroke","strokeWidth","barHeight","rx","SpotifySelectors","access_token","setSongsDetails","setTrackAttribute","setSelectedPlaylist","selectedPlaylist","playlists","setPlaylists","songlist","setSonglist","headers","axios","get","then","response","_response$data","_response$data$items","items","elm","label","error","_songlist$items","_songlist$data","_songlist$data$items","trackids","promises","method","url","String","Object","assign","audio_features","find","_track$track","alert","Promise","resolve","results","get50SongsDetails","Autocomplete","disablePortal","options","sx","isOptionEqualToValue","option","renderInput","params","TextField","_objectSpread","PlaylistInterface","playlist","songIdOrder","userData","setUserData","playlistTextbox","setPlaylistTextbox","variant","e","text","target","onClick","playlistName","playlistSongs","status","statusText","saveNew","playlistId","addToPlaylist","SpotifyData","apiData","setApiData","JamSort","hash","window","location","substring","process","songsDetails","_React$useState","React","_React$useState2","Link","to","GenreCheck","Redirect","clientId","redirect_uri","href","encodeURIComponent","App","Router","Switch","Route","path","exact","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","mode","primary","main","light","dark","backgroundColor","contrastText","secondary","contrastThreshold","tonalOffset","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c42146fa.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3'\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\n// https://www.youtube.com/watch?v=zXBdNDnqV2Q\n\nconst D3Chart = (props) => {\n    // destructure props\n    const { data } = props // don't want to see props other places. \n    const { trackAttribute } = props\n    const {setSongIdOrder} = props\n    // State Variables\n    const [sortedData, setSortedData] = useState(null)\n    const [bars, setBars] = useState(null)\n    const [orderMethod, setOrderMethod] = useState('None')\n    const [playlistStats, setPlaylistStats] = useState({\n        'max': 0,\n        'min': 0,\n        'avg': 0\n        })\n    //constant vars\n    const barHeight = 30\n    const chartWidth = 800\n    const chartOffset = 40\n    let chartHeight = data ? (data?.length * (barHeight + 5)) + (chartOffset) : 0 \n\n    //use effects\n\n        //update stats\n    useEffect(() => {\n\n        if (data !== null){\n            setPlaylistStats({\n                'max': (Math.max.apply(Math, data?.map(function (o) { return o[trackAttribute] }))),\n                'min': (Math.min.apply(Math, data?.map(function (o) { return o[trackAttribute] }))),\n                'avg': data?.reduce((p, c) => p + c[trackAttribute], 0) / data?.length\n            })\n        }\n    }, [data, trackAttribute])\n    \n        // a method to sort the playlist\n    useEffect(() => {\n        if (data){\n            console.log(data, typeof (data))\n            switch (orderMethod) {\n                case 'Descending':\n                    setSortedData([...data].sort((a, b) => {\n                        return b[trackAttribute] - a[trackAttribute]\n                    }))\n                    break\n                case 'Ascending':\n                   setSortedData([...data].sort((a, b) => {\n                        return a[trackAttribute] - b[trackAttribute]\n                    }))\n                    break\n                case 'Peak':\n                    let tempDesc = [...data].sort((a, b) => {\n                        return b[trackAttribute] - a[trackAttribute]\n                    })\n\n                    let everyOther = tempDesc.filter((element, index) => {\n                        return index % 2 === 0;\n                    })\n                    let OddsOther = tempDesc.filter((element, index) => {\n                        return index % 2 !== 0;\n                    })\n\n                    let dataFirstHalf = everyOther.sort((a, b) => {\n                        return a[trackAttribute] - b[trackAttribute]\n                    })\n                    let dataSecondHalf = OddsOther.sort((a, b) => {\n                        return b[trackAttribute] - a[trackAttribute]\n                    })\n                    setSortedData(dataFirstHalf.concat(dataSecondHalf))\n                    break\n                case 'None':\n                    setSortedData(data)\n                    break\n                default:\n                    setSortedData(data)\n                    break\n\n            }\n        } else {\n            setBars(null)\n        }\n    }, [orderMethod, trackAttribute, data])\n\n    useEffect(() => {\n        if (typeof (sortedData) !== 'undefined') {\n            console.log(sortedData)\n            let yScale = d3.scaleBand().domain(d3.range(data?.length)).range([0, chartHeight-chartOffset]).padding(.05)\n            let xScale = d3.scaleLinear().domain([0, playlistStats.max]).range([0, 100])\n\n            setSongIdOrder(sortedData?.map(d => {\n                return `spotify:track:${d?.id}`\n            }))\n            \n            let chartData = sortedData?.map(d => {\n                return {\n                    trackName: d?.track?.name,\n                    x: 50,\n                    y: yScale(sortedData?.indexOf(d)),\n                    width: xScale(d[trackAttribute]),\n                    height: barHeight,\n                }\n            \n            })\n            setBars(chartData)\n        }\n    }, [data, chartHeight, trackAttribute, playlistStats, orderMethod, sortedData, setSongIdOrder])\n\n    const handleChange = (event, newAlignment) => {\n        setOrderMethod(newAlignment);\n    };\n\n    return (\n        <> {/*this iS A FRAGMENT*/}\n        \n        <div className = 'sort-controls'>\n            <h3>Sort Method  </h3>\n                <ToggleButtonGroup\n                    color=\"primary\"\n                    value={orderMethod}\n                    exclusive\n                    onChange={handleChange}\n                >\n                    <ToggleButton value=\"None\">None</ToggleButton>\n                    <ToggleButton value=\"Ascending\">Ascending</ToggleButton>\n                    <ToggleButton value=\"Descending\">Descending</ToggleButton>\n                    <ToggleButton value=\"Peak\">Peak</ToggleButton>\n\n                </ToggleButtonGroup>\n        </div>\n\n        <div className = 'playlist-stats card'>\n            {data &&\n            <>\n                <h3>Min {trackAttribute}: {playlistStats.min.toFixed(2)}</h3>\n                <h3>Max {trackAttribute}: {playlistStats.max.toFixed(2)}</h3>\n                <h3>Average {trackAttribute}: {playlistStats.avg.toFixed(2)}</h3>\n            </>\n            }\n        </div>\n\n        <div id = 'chart'>\n           \n            {/* Add a TERNARY ??, React Fragments sort of like an invisible bundler div */}\n            <svg id='songChart' height={chartHeight} width={chartWidth}>\n                <text x={50} y={15} style={{fill: '#FFFFFF'}}>{trackAttribute}</text>\n                <text x={ bars ? Math.max.apply(Math, bars.map(function (o) { return o.width + 50 }))+8 : 20} y={15} style={{ fill: '#FFFFFF' }}>Songs</text>\n                <line x1={0} x2={chartWidth} y1={chartOffset-15} y2={chartOffset-15} stroke='white' strokeWidth='.1' />\n                \n\n                {data && bars &&\n                    bars?.map(bars => {\n                        return <g key={bars.y}>\n                            <text x={bars.x + 110} y={bars.y + (barHeight/1.5)+chartOffset} style={{ fill: '#FFFFFF' }}>{bars?.trackName} </text>\n                            <rect x={bars.x} y={bars.y + chartOffset} width={bars.width} height={bars.height} style={{ fill:'#1DB954', rx: '4px'}}></rect>\n                            \n                        </g>\n                    })\n                \n                }\n                {data && bars &&\n                    <g>\n\n                    <line x1={Math.max.apply(Math, bars.map(function (o) { return o.width + 50 }))} y1={chartOffset} x2={Math.max.apply(Math, bars.map(function (o) { return o.width+50 }))} y2={chartHeight} stroke='white' strokeWidth=\".3\" />\n                    <line x1={50} y1={chartOffset} x2={50} y2={chartHeight} stroke='white' strokeWidth=\".3\"/>\n\n                    {/* Max Lines */}\n                    {/* <line x1={Math.max.apply(Math, bars.map(function (o) { return o.width + 50 }))} x2={300} y1={chartOffset} y2={30} stroke='white' strokeWidth='.3'/> */}\n                    {/* Avg Line */}\n                    {/* <line x1={} x2={} y1={} y2={} stroke='white' strokeWidth='.3'/> */}\n\n                    {/* Min Ln */}\n                        {/* <line x1={Math.min.apply(Math, bars.map(function (o) { return o.width + 50 }))} x2={200} y1={chartOffset} y2={30} stroke='white' strokeWidth='.3'/> */}\n                    {/* <line x1={} x2={} y1={} y2={} stroke='white' strokeWidth='.3'/> */}\n                    </g>\n                }\n                \n            </svg>\n           \n        </div>\n         </>\n    )\n\n}\n\n\n\n\n\n\n\nexport default D3Chart","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n\nconst SpotifySelectors = (props) => {\n    //destructure\n    const {access_token} = props\n\n    const {setSongsDetails} = props\n\n    const {setTrackAttribute} = props\n    const {trackAttribute} = props\n    \n    const {setSelectedPlaylist} = props\n    const {selectedPlaylist} = props\n    //state vars\n    const [playlists, setPlaylists] = useState(['No Playlists Found'])\n    // const [selectedPlaylist, setSelectedPlaylist] = useState(null)\n    const [songlist, setSonglist] = useState(null)\n    //const vars\n\n    //use effects\n        //Get Spotify Playlists\n    useEffect(() => {\n        \n        const headers = {\n            'Authorization': 'Bearer ' + access_token\n        }\n        axios.get(`https://api.spotify.com/v1/me/playlists?limit=50`, { headers: headers })\n            .then((response) => {\n                setPlaylists(response?.data?.items?.map(elm => {\n                    return { label: elm.name, data: elm }\n                }))\n            }, (error) => {\n                console.log(error);\n            })\n\n    }, [access_token]);\n\n        // get songs in the playlists\n    useEffect(() => {\n        // Cleaner way of doing this??\n        if(typeof(selectedPlaylist) !== 'undefined'){   \n            const headers = {\n                'Authorization': 'Bearer ' + access_token\n            }\n            axios.get(`https://api.spotify.com/v1/playlists/${selectedPlaylist?.id}/tracks`, { headers: headers })\n                .then((response) => {\n                    setSonglist(response)\n                    songlist?.items?.map(elm => {\n                        return elm\n                    })\n                }, (error) => {\n                    console.log('this error', selectedPlaylist, error);\n                })\n        } else {\n            console.log('no playlist selected')\n            setSongsDetails(null)\n            setSonglist(null)\n        }\n    }, [selectedPlaylist, access_token, songlist?.items, setSongsDetails])\n\n        // get the details of each song in the songlist\n    useEffect(() => {\n\n        //Function to get all song information and details, up to 50 tracks at a time:\n        const get50SongsDetails = (songlist) => {\n            const headers = {\n                'Authorization': 'Bearer ' + access_token\n            }\n            let trackids = songlist?.data?.items?.map(track => {\n                return (track.track.id)\n            })\n            let promises = axios({\n                method: 'GET',\n                url: `https://api.spotify.com/v1/audio-features/?ids=${String(trackids)}`,\n                headers: headers\n            }).then((response) => {\n\n                // console.log(response.data.audio_features)\n                // console.log(songlist.data.items)\n                let res = songlist.data.items.map(track => {\n                    return Object.assign(track, response.data.audio_features.find(elm => elm?.id === track?.track?.id))\n                })\n                return (res)\n            }, (error) => {\n                console.log(error)\n                alert(error)\n                return (error)\n            })\n\n            Promise.resolve(promises).then(results => {\n                setSongsDetails(results)\n            })\n        }\n\n\n        if (songlist && typeof (selectedPlaylist) !== 'undefined'){\n            // let fullSongsDetails = []\n            // console.log(songlist?.data?.items.length)\n            // for(let i=0; i<songlist?.data?.items.length;i=i+50){\n            //     fullSongsDetails.push(...songlist?.data?.items?.slice(i, i + 50))\n            // }\n            // console.log(fullSongsDetails)\n           setSongsDetails(get50SongsDetails(songlist))\n        } else {\n            setSongsDetails(null)\n        }\n\n\n    }, [selectedPlaylist, access_token, songlist, setSongsDetails])\n\n    \n\n\n\n    const handleChange = (event, newAlignment) => {\n        setTrackAttribute(newAlignment);\n\n    };\n\n\n    //jsx return\n    return (<>\n\n        <div className='inputs-flex'>\n            <div className=\"autocomplete-container\">\n        <Autocomplete\n            disablePortal\n            id=\"combo-box\"\n            options={playlists}\n            sx={{ width: 300 }}\n            onChange={(event, value) => setSelectedPlaylist(value?.data)}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            renderInput={(params) => <TextField {...params} label=\"Playlist\" />}\n        />\n            </div>\n        <div className='mini-box'>\n        <h3> Sort Metric</h3>\n        <ToggleButtonGroup\n            color=\"primary\"\n            value={trackAttribute}\n            exclusive\n            onChange={handleChange}\n        >\n            <ToggleButton value=\"danceability\">danceability</ToggleButton>\n            <ToggleButton value=\"energy\">energy</ToggleButton>\n            <ToggleButton value=\"key\">key</ToggleButton>\n            {/* <ToggleButton value=\"loudness\">loudness</ToggleButton> */}\n            <ToggleButton value=\"speechiness\">speechiness</ToggleButton>\n            <ToggleButton value=\"tempo\">tempo</ToggleButton>\n        </ToggleButtonGroup>\n            </div>\n\n        </div>\n    </>\n    )\n}\n\nexport default SpotifySelectors\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\n\nconst PlaylistInterface = (props) => {\n    //deconstruct props\n    const {playlist} = props\n    const {access_token} = props\n    const {songIdOrder} = props\n   \n    // state vars\n    const [userData, setUserData] = useState(null)\n    const [playlistTextbox, setPlaylistTextbox] = useState(\"\")\n\n    // use effects\n        // update the textbox\n\n\n        // get the user id\n    useEffect(()=>{\n        const headers = {\n            'Authorization': 'Bearer ' + access_token,\n        }\n        axios.get(`https://api.spotify.com/v1/me/`, { headers: headers })\n            .then((response) => {\n                setUserData(response)\n            }, (error) => {\n                console.log(error);\n            })\n    },[access_token])\n\n    //other functions\n        // save a new playlist\n    let saveNew = (access_token, userData, playlistName, playlistSongs) => {\n       \n        const headers = {\n            'Authorization': 'Bearer ' + access_token,\n        }\n        const data = {\n            \"name\": playlistName,\n            \"description\": \"Playlist Sorted with Jamsort\",\n            \"public\": true\n        }\n        // axios.post(`https://api.spotify.com/v1/users/${userData.data.id}/playlists`, { headers: headers, body: data})\n        axios({\n            method: 'post',\n            url: `https://api.spotify.com/v1/users/${userData.data.id}/playlists`,\n            headers: headers,\n            data: data\n        })\n            .then((response) => {\n                const headers = {\n                    'Authorization': 'Bearer ' + access_token,\n                }\n\n                axios({\n                    method: 'post',\n                    url: `https://api.spotify.com/v1/playlists/${response.data.id}/tracks`,\n                    headers: headers,\n                    data: {\"uris\": playlistSongs}\n                }).then((response)=>{\n                    if (response.status === 201){\n                        alert(`Playlist Saved as: ${data.name}`)\n                    }else{\n                        alert(`error: ${response.status}, ${response.statusText}`)\n                    }\n                    console.log(response)\n                })  \n            \n        }, (error) => {\n            console.log(error);\n            })\n        }\n\n    let addToPlaylist = (access_token, userData, playlistId, playlistSongs)=>{\n        const headers = {\n            'Authorization': 'Bearer ' + access_token,\n        }\n\n        axios({\n            method: 'put',\n            url: `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n            headers: headers,\n            data: { \"uris\": playlistSongs }\n        }).then((response=>{\n            if (response.status === 201) {\n                alert('Playlist Overwritten!')\n            } else {\n                alert(`error: ${response.status}, ${response.statusText}`)\n            }\n            console.log(response)\n        }))\n    }\n\n        //handle textbox change event\n    let textboxOnChange = (text) => {\n        setPlaylistTextbox(text)\n    }\n\n    return(\n        <>\n        <div id='playlistInterface'>\n            <TextField id=\"outlined-basic\" label=\"Playlist Name\" variant=\"outlined\" onChange={(e) => textboxOnChange(e.target.value)} value={playlistTextbox}></TextField>\n            <div className='sp-button sp-flat sp-light' onClick={() => saveNew(access_token, userData, playlistTextbox, songIdOrder)} >Save as new Playlist</div>\n            <div className='sp-button sp-flat sp-light' onClick={() => addToPlaylist(access_token, userData, playlist.id, songIdOrder)}>Overwrite {playlist ? playlist.name : \" \"} Playlist</div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default PlaylistInterface","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\nconst SpotifyData = (props) => {\n    const [apiData, setApiData] = useState(null)\n    //destructure\n    const { access_token } = props\n\n\n    useEffect(() => {\n        console.log(\"running useEffect\", access_token)\n        const headers = {\n            'Authorization': 'Bearer ' + access_token\n        }\n        // https://designcode.io/react-hooks-handbook-fetch-data-from-an-api\n        if (access_token) {\n            axios.get(`https://api.spotify.com/v1/me/player/currently-playing`, { headers: headers })\n                .then((response) => {\n                    if (response.status === 204) {\n                        axios.get(`https://api.spotify.com/v1/me/player/recently-played?market=US`, { headers: headers })\n                            .then((response) => {\n                                console.log('RESPONSE', response.data)\n                                setApiData(response.data)\n                            }, (error) => {\n                                console.log(error)\n                            }\n                            )\n                    }\n                }, (error) => {\n                    console.log(error)\n                })\n\n        }\n    }, [access_token])\n\n    return (\n        <div>\n            {access_token ? <div>{apiData}</div> : null}\n        </div>\n    )\n}\n\nexport default SpotifyData","import React, { useState } from 'react';\nimport D3Chart from '../components/D3Chart'\nimport SpotifySelectors from '../components/SpotifySelectors';\nimport PlaylistInterface from '../components/PlaylistInterface';\nimport SpotifyData from '../components/SpotifyData';\nimport { Link } from 'react-router-dom';\n\nconst JamSort = (props) => {\n    const hash = window.location.hash\n    const access_token = hash.substring(14, hash.indexOf('&token_type'))\n    console.log('access token', access_token)\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    console.log('clientid', clientId)\n\n    const [songsDetails, setSongsDetails] = useState(null)\n    const [trackAttribute, setTrackAttribute] = React.useState('tempo');\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null)\n    const [songIdOrder, setSongIdOrder] = useState(null)\n\n    if (access_token.length === 0) {\n        return (\n            <div>\n                <h1 className='subtitle'>Spotify API React App</h1>\n                <p className='informational-text'>This app lets you sort your playlists by energy, dancability and more. Authenticate with Spotify to get started!</p>\n<div className='auth-block'>\n                <div className='sp-button sp-flat sp-light'>\n                <Link className='auth-text' to='/spotify-api-react-app/'>Authenticate with Spotify</Link>\n                </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <SpotifyData access_token={access_token} />\n                <SpotifySelectors className=\"card\" access_token={access_token} setSongsDetails={setSongsDetails} trackAttribute={trackAttribute} setTrackAttribute={setTrackAttribute} setSelectedPlaylist={setSelectedPlaylist} selectedPlaylist={selectedPlaylist} />\n\n                <hr />\n                <div className='song-chart-frame'>\n                    <PlaylistInterface playlist={selectedPlaylist} access_token={access_token} songIdOrder={songIdOrder} />\n                    <D3Chart data={songsDetails} trackAttribute={trackAttribute} setSongIdOrder={setSongIdOrder}>\n\n                    </D3Chart>\n                </div>\n\n            </div>\n\n        )\n\n    }\n}\nexport default JamSort","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SpotifyData from \"../components/SpotifyData\";\n\n\nconst GenreCheck = (props) => {\n    const hash = window.location.hash\n    const access_token = hash.substring(14, hash.indexOf('&token_type'))\n    // destructure props\n    // const {propName} = props\n\n    // State Variables\n    // const [variableName, setVariableName] = useState(null)\n\n    //Use Effects\n        //useEffect desc\n    useEffect(()=> {\n        \n    },[])\n    // JSX return\n    return(\n        <>\n            <SpotifyData access_token={access_token}/>\n        </>\n    )\n}\n\nexport default GenreCheck","\nimport React, { useEffect } from 'react';\n\nconst Redirect = (props) => {\n    \n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    console.log('clientid', clientId)\n    let redirect_uri = ''\n    if (String(window.location.href)[String(window.location.href).length-1]===\"/\") {\n        redirect_uri = `${window.location.href}index`;\n        \n    }else{\n        // redirect_uri = `${window.location.href}/jamsort`;\n        redirect_uri = 'http://localhost:3000/spotify-api-react-app/jamsort'\n    }\n    console.log(redirect_uri)\n\n    \n    const scopes = 'playlist-modify-private playlist-read-private playlist-modify-public user-read-currently-playing user-read-recently-played'\n    useEffect(() => {\n        window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&scope=${encodeURIComponent(scopes)}&redirect_uri=${redirect_uri}&response_type=token&state=123`;\n\n\n    }, [clientId, redirect_uri]);\n\n    return (\n        <div>\n        </div>\n    );\n}\n\nexport default Redirect;\n\n// https://accounts.spotify.com/authorize?client_id=cbb4da0e74d849cf94ec037fdf03ff26&scope=playlist-modify-private%20playlist-read-private%20playlist-modify-public%20user-read-currently-playing%20user-read-recently-played&redirect_uri=http://localhost:3000/spotify-api-react-app/index#access_token=BQATn5hbdbdwzblQigfBVrs83VKSlCvu4tWncm0IydFch-mWrq_aNSIBa5J1Ihb095zYstwVf-BJj9zbO_wvCnwtGCimyw4xT4Mw8qs1P0EL4CzZ1ccfC7SeQOl2M50FuK8m1y00imZOtCfvYFhHBmmGf5hbFXayXCKBxZq5vITEokd5gv5FZYh05xuBpifrllzX1Mbf6xoJSfjgJL-qt-NveYDyBvFncka85Bz3RUlCxZMDmygS2TL9&token_type=Bearer&expires_in=3600/index?&response_type=tokenn\n// https://accounts.spotify.com/authorize?client_id=cbb4da0e74d849cf94ec037fdf03ff26&scope=playlist-modify-private%20playlist-read-private%20playlist-modify-public%20user-read-currently-playing%20user-read-recently-played&redirect_uri=http://localhost:3000/spotify-api-react-app/index?code=AQD4onIMxHeevOxZnxNdyr0TquJtC-rj45Y6Bz8m61aAV_PkSqFdsDQmO3RylHaEzPsLF49nEl6Ax0FTtmorMuMqXF7_Itpu09JYfjHYmLvkI15thJ8IvNfZjQ39DvxJDM0LDLajaINo-aaxjDYy3G7F31pQZJr_Axs6qiEeP6B1yUee48ByGs7F2jjigrJbdsBxgXbNacIif5KCBSX6RB4kz9z6oQxzqY4OYpHz1wad0WGraqgn1V2ZQvos7AAagvMl7pkZLzbAbAz5djAxJnlKo3vluia7U_y51U3xKPPpubdVRkDoEcpiH1PeTugmxgAW1hd50OTinjIBBoJe7vNuLznAq8_pnx6WG90PehSUbfmFrw&state=123/index&response_type=code&state=123 http://localhost:3000/spotify-api-react-app/index","import React from \"react\";\nimport \"./App.css\";\nimport JamSort from \"./pages/JamSort\";\nimport GenreCheck from \"./pages/GenreCheck\";\nimport Redirect from './components/Redirect'\nimport {BrowserRouter as Router,\n  Switch,\n  Route, \nLink} from 'react-router-dom'\n// https://levelup.gitconnected.com/how-to-build-a-spotify-player-with-react-in-15-minutes-7e01991bc4b6\n\nconst App = (props) => {\n\n  return (\n\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n\n          <h2>JamSort</h2>\n      </header>\n      <div className='body'>\n      \n      <Router>\n        <Switch>\n            <Route path= \"/spotify-api-react-app/\" exact component={Redirect}/>\n            <Route path= \"/spotify-api-react-app/index\" exact component={JamSort}/>\n            <Route path=\"/spotify-api-react-app/jamsort\" exact component = {JamSort}/>\n            <Route path=\"/spotify-api-react-app/genrecheck\" exact component = {GenreCheck}/>\n        </Switch>\n          <Link to=\"/spotify-api-react-app/jamsort\">Jamsort</Link> |{\" \"}\n          <Link to=\"/spotify-api-react-app/genrecheck\">Genrecheck</Link> |{\" \"}\n      </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Redirect from './components/Redirect';\n\n//pull in use styles from material u core. Pass in the degailt theme object\n//\nlet theme = createTheme({\n\n  palette: {\n    mode: 'dark',\n    primary: {\n      // light: will be calculated from palette.primary.main,\n     \n      main: '#FFFFFF',\n      light: '#FFFFF',\n      dark: '#FF0000',\n      backgroundColor: '#FFFFFF',\n      contrastText: '#FFFFFF'\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: '#b3b3b3',\n      main: '#b3b3b3',\n      dark: '#181818',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#FFFFFF',\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme = {theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}